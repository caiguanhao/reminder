/* vim: set nowrap: */
package main

func init() {
	html = `<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width">
<style>
@font-face {
  font-family: 'Roboto Condensed';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(data:font/woff2;charset=utf-8;base64,) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
html {
  font-family: 'Roboto Condensed', sans-serif;
  font-size: 12px;
}
body {
  column-width: 300px;
  column-count: 2;
  max-width: 800px;
  margin: auto;
  padding: 10px;
}
table {
  border-collapse: collapse;
  width: 100%;
  border: 1px solid #333;
  margin-bottom: 10px;
  break-inside: avoid-column;
}
table:last-child {
  margin-bottom: 0;
}
td {
  border: 1px solid #333;
  padding: 3px 6px;
}
.header {
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
  margin-bottom: 10px;
}
.text-success {
  background-color: #198754;
  color: #fff;
}
.text-danger {
  background-color: #dc3545;
  color: #fff;
}
.text-warning {
  background-color: #ffc107;
}
</style>
</head>
<body>
<div class="header">
  <h1 style="margin: 0">Report</h1>
  <div>{{.Now}}</div>
</div>
<table>
  <tbody>
    <tr>
      <td>Aliyun Balance</td>
      <td class="{{.AliyunBalanceClass}}">{{.AliyunBalance}}</td>
    </tr>
    <tr>
      <td>TencentCloud Balance</td>
      <td class="{{.TencentCloudBalanceClass}}">{{.TencentCloudBalance}}</td>
    </tr>
  </tbody>
</table>
<table>
  <tbody>
    <tr>
      <td>Domain</td>
      <td>Expiry Date</td>
    </tr>
    {{- range .Domains }}
    <tr>
      <td>{{ .Name }}</td>
      <td class="{{ .Class }}">{{ .Date }}</td>
    </tr>
    {{- end }}
  </tbody>
</table>
<table>
  <tbody>
    <tr>
      <td>Certificate</td>
      <td>Expiry Date</td>
    </tr>
    {{- range .Certs }}
    <tr>
      <td>{{ .Name }}</td>
      <td class="{{ .Class }}">{{ .Date }}</td>
    </tr>
    {{- end }}
  </tbody>
</table>
<table>
  <tbody>
    <tr>
      <td>Region</td>
      <td>Server</td>
      <td>Expiry Date</td>
    </tr>
    {{- if .ServersError }}
    <tr>
      <td colspan="3" class="text-danger">{{ .ServersError }}</td>
    </tr>
    {{- end }}
    {{- range .Regions }}
    {{- $regionId := . }}
    {{- $servers := index $.Servers $regionId }}
    {{- range $index, $server := $servers }}
    <tr>
      {{- if eq $index 0 }}<td rowspan="{{ len $servers }}">{{ $regionId }}</td>{{- end }}
      <td>{{ $server.Name }}</td>
      <td class="{{ $server.Class }}">{{ $server.Date }}</td>
    </tr>
    {{- end }}
    {{- end }}
  </tbody>
</table>
</body>
</html>
`
}
